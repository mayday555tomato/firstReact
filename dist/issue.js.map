{"version":3,"sources":["../server/issue.js"],"names":["validIssueStatus","New","Open","Assigned","Fixed","Verified","Closed","issueFieldType","status","owner","effort","created","completionDate","title","cleanupIssue","issue","cleanedUpIssue","Object","keys","forEach","field","convertIssue","Date","validateIssue","errors","push","length","join"],"mappings":";;;;;AAAA,MAAMA,mBAAmB;AACrBC,SAAK,IADgB;AAErBC,UAAM,IAFe;AAGrBC,cAAU,IAHW;AAIrBC,WAAO,IAJc;AAKrBC,cAAU,IALW;AAMrBC,YAAQ;AANa,CAAzB;;AASA,MAAMC,iBAAiB;AACnBC,YAAQ,UADW;AAEnBC,WAAO,UAFY;AAGnBC,YAAQ,UAHW;AAInBC,aAAS,UAJU;AAKnBC,oBAAgB,UALG;AAMnBC,WAAO;AANY,CAAvB;;AASA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAMC,iBAAiB,EAAvB;AACAC,WAAOC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA4BC,KAAD,IAAW;AAClC,YAAIb,eAAea,KAAf,CAAJ,EAA2BJ,eAAeI,KAAf,IAAwBL,MAAMK,KAAN,CAAxB;AAC9B,KAFD;AAGA,WAAOJ,cAAP;AACH;;AAED,SAASK,YAAT,CAAsBN,KAAtB,EAA4B;AACxB,QAAGA,MAAMJ,OAAT,EAAkBI,MAAMJ,OAAN,GAAgB,IAAIW,IAAJ,CAASP,MAAMJ,OAAf,CAAhB;AAClB,QAAGI,MAAMH,cAAT,EAAyBG,MAAMH,cAAN,GAAuB,IAAIU,IAAJ,CAASP,MAAMH,cAAf,CAAvB;AACzB,WAAOE,aAAaC,KAAb,CAAP;AACH;;AAED,SAASQ,aAAT,CAAuBR,KAAvB,EAA8B;AAC1B,UAAMS,SAAS,EAAf;AACAP,WAAOC,IAAP,CAAYX,cAAZ,EAA4BY,OAA5B,CAAqCC,KAAD,IAAW;AAC3C,YAAIb,eAAea,KAAf,MAA0B,UAA1B,IAAwC,CAACL,MAAMK,KAAN,CAA7C,EAA2D;AACvDI,mBAAOC,IAAP,CAAa,4BAA2BL,KAAM,EAA9C;AACH;AACJ,KAJD;;AAMA,QAAI,CAACpB,iBAAiBe,MAAMP,MAAvB,CAAL,EAAqC;AACjCgB,eAAOC,IAAP,CAAa,GAAEV,MAAMP,MAAO,yBAA5B;AACH;;AAED,WAAQgB,OAAOE,MAAP,GAAgBF,OAAOG,IAAP,CAAY,IAAZ,CAAhB,GAAoC,IAA5C;AACH;;kBAEc;AACXJ,iBADW;AAEXT,gBAFW;AAGXO;AAHW,C","file":"issue.js","sourcesContent":["const validIssueStatus = {\n    New: true,\n    Open: true,\n    Assigned: true,\n    Fixed: true,\n    Verified: true,\n    Closed: true,\n};\n\nconst issueFieldType = {\n    status: 'required',\n    owner: 'required',\n    effort: 'optional',\n    created: 'required',\n    completionDate: 'optional',\n    title: 'required',\n};\n\nfunction cleanupIssue(issue) {\n    const cleanedUpIssue = {};\n    Object.keys(issue).forEach((field) => {\n        if (issueFieldType[field]) cleanedUpIssue[field] = issue[field];\n    });\n    return cleanedUpIssue;\n}\n\nfunction convertIssue(issue){\n    if(issue.created) issue.created = new Date(issue.created);\n    if(issue.completionDate) issue.completionDate = new Date(issue.completionDate);\n    return cleanupIssue(issue);\n}\n\nfunction validateIssue(issue) {\n    const errors = [];\n    Object.keys(issueFieldType).forEach((field) => {\n        if (issueFieldType[field] === 'required' && !issue[field]) {\n            errors.push(`Missing mandatory field: ${field}`);\n        }\n    });\n\n    if (!validIssueStatus[issue.status]) {\n        errors.push(`${issue.status} is not a valid status.`);\n    }\n\n    return (errors.length ? errors.join('; ') : null);\n}\n\nexport default {\n    validateIssue,\n    cleanupIssue,\n    convertIssue,\n};\n\n"]}