{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","connect","then","connection","listen","console","log","catch","error","get","req","res","send","filter","stringify","query","status","effort_lte","effort_gte","effort","parseInt","$lte","$gte","collection","find","toArray","issues","metadata","total_count","length","_metadata","records","message","issueId","params","id","_id","limit","next","issue","post","newIssue","body","created","Date","err","validateIssue","insertOne","result","insertedId","tmp","put","update","convertIssue","savedIssue","delete","deleteOne","deleteResult","n"],"mappings":"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","file":"server.js","sourcesContent":["\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectID } from 'mongodb';\nimport qs from 'qs';\nimport Issue from './issue.js';\n\nimport renderedPageRouter from './renderedPageRouter.jsx';\n\nSourceMapSupport.install();\n\nconst app = express();\n\napp.use(express.static('static'));\napp.use(bodyParser.json());\n/*\nconst issues = [\n    {\n        id: 1, status: 'Open', owner: 'Ravan',\n        created: new Date('2016-08-15'), effort: 5, completionDate: undefined,\n        title: 'Error in console when clicking Add'\n    },\n    {\n        id: 2, status: 'Assigned', owner: 'Eddie',\n        created: new Date('2016-08-16'), effort: 12, completionDate: new Date('2016-08-30'),\n        title: 'Missing bottom border on panel'\n    }\n];\n*/\n\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker')\n    .then((connection) => {\n        db = connection.db('issuetracker'); // need\n        app.listen(3000, () => {\n            console.log('App started on port 3000');\n        });\n    }).catch((error) => {\n        console.log('ERROR:', error);\n    });\n\n\napp.get('/hello', (req, res) => {\n    res.send('Hello World');\n});\n\napp.get('/api/issues', (req, res) => {\n    const filter = {};\n    console.log('req.query: |' + qs.stringify(req.query));\n    if(req.query.status) filter.status = req.query.status;\n    if(req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n    if (req.query.effort_lte) {\n        console.log('gte value:' + parseInt(req.query.effort_gte, 10));\n        filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n    }\n    if (req.query.effort_gte){\n        console.log('lte value:' + parseInt(req.query.effort_lte, 10));\n        filter.effort.$gte = parseInt(req.query.effort_gte, 10); \n    }\n    db.collection('issues').find(filter).toArray()\n        .then((issues) => {\n            const metadata = { total_count: issues.length };\n            res.json({ _metadata: metadata, records: issues });\n        })\n        .catch((error) => {\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n    console.log('Get /api/issues is called...');\n});\n\napp.get('/api/issues/:id', (req, res) =>{\n    let issueId;\n    try {\n        issueId = new ObjectID(req.params.id);\n    }catch(error){\n        res.status(422).json({message: `Invalid issue ID format: ${error}`});\n        return;\n    }\n    db.collection('issues').find({_id:issueId}).limit(1)\n    .next()\n    .then(issue=> {\n        if (!issue) res.status(404).json({message: `No such issue: ${issueId}`});\n        else res.json(issue);\n    }).catch(error =>{\n        console.log(error);\n        res.status(500).json({message:`Internal Server Error: ${error}`});\n    });\n    console.log('Get /api/issues/:id is called...');\n});\n\napp.post('/api/issues', (req, res) => {\n    console.log('Post /api/issues is called...');\n    const newIssue = req.body; // from List createIssue fetch 'body: JSON.stringify(newIssue)'\n    newIssue.created = new Date();\n    if (!newIssue.status) newIssue.status = 'New';\n    const err = Issue.validateIssue(newIssue);\n    if (err) {\n        res.status(422).json({ message: `Invalid requrest: ${err}` });\n        return;\n    }\n    db.collection('issues').insertOne(newIssue).then(result =>\n        db.collection('issues').find({ _id: result.insertedId }).limit(1).next()).then((tmp) => {\n        res.json(tmp);\n    })\n        .catch((error) => {\n            console.log(error);\n            res.status(500).json({ message: `Internal Server Error: ${error}` });\n        });\n        console.log('Post /api/issues is called...');\n});\n\napp.use('/', renderedPageRouter);\n\napp.put('/api/issues/:id', (req,res) => {\n    let issueId;\n    try{\n        issueId = new ObjectID(req.params.id);\n    }catch(error){\n        res.status(422).json({message: `Invalid issue ID format: ${error}`});\n        return;\n    }\n\n    const issue = req.body;\n    delete issue._id;\n\n    const error = Issue.validateIssue(issue);\n    if(error){\n        res.status(422).json({message: `Invalid request: ${error}`});\n        return;\n    }\n\n    db.collection('issues').update({ _id: issueId }, Issue.convertIssue(issue)).\n    then(()=> db.collection('issues').find({_id: issueId}).limit(1).next()).\n    then(savedIssue => {\n        res.json(savedIssue);\n    }).catch(error => {\n        console.log(error);\n        res.status(500).json({message: `Internal Server Error: ${error}`});\n    });\n    console.log('Put /api/issues/:id is called...');\n});\n\napp.delete('/api/issues/:id', (req, res)=>{\n    let issueId;\n    try{\n        issueId = new ObjectID(req.params.id);\n    }catch(error){\n        res.status(422).json({message: `Invalid issue ID format: ${error.message}`});\n        return;\n    }\n\n    db.collection('issues').deleteOne({_id: issueId}).then((deleteResult)=>{\n        if(deleteResult.result.n === 1) res.json({status: 'OK'});\n        else res.json({status: 'Warning: object not found'});\n    }).catch(err =>{\n        console.log(err);\n        res.status(500).json({message: `Internal Server Error: ${error}`});\n    });\n});\n/* Not necessary for me.\nif (process.env.NODE_ENV !== 'production') {\n    const webpack = require('webpack');\n    const webpackDevMiddleware = require('webpack-dev-middleware');\n    const webpackHotMiddleware = require('webpack-hot-middleware');\n    const config = require('../webpack.config');\n    \n    config.entry.app.push('webpack-hot-middleware/client', 'webpack/hot/only-dev-server');\n    config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n    const bundler = webpack(config);\n    app.use(webpackDevMiddleware(bundler, { noInfo: true, publicPath: config.output.publicPath }));\n    app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n*/"]}