{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/IssueEdit.jsx"],"names":["contentNode","document","getElementById","NoMatch","RoutedApp","render","console","log","module","hot","accept","IssueList","state","issues","createIssue","bind","setFilter","loadData","prevProps","oldQuery","parse","location","search","substring","newQuery","props","status","fetch","then","response","ok","json","data","_metadata","total_count","records","forEach","issue","created","Date","completionDate","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","query","history","push","pathname","Component","propTypes","object","isRequired","router","IssueTable","issueRows","map","_id","IssueRow","owner","toDateString","effort","title","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","IssueFilter","clearFilter","setFilterOpen","setFilterAssigned","Separator","IssueEdit","id","match","params"],"mappings":"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","file":"app.bundle.js","sourcesContent":["\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\n//import { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport {BrowserRouter as Router, Route, Link, Switch, Redirect, withRouter,browserHistory} from 'react-router-dom';\n\nimport IssueList from './IssueList.jsx';\nimport IssueEdit from './IssueEdit.jsx';\n\nconst contentNode = document.getElementById('contents');\nconst NoMatch = () => <p> Page Not Found </p>;\n\nconst RoutedApp = () => (\n    <Router history={browserHistory}>\n        <div>\n            <div className='header'>\n                <h1>Issue Trackereeee</h1>\n            </div>        \n            <Switch>\n                <Redirect exact from='/' to='/issues' />            \n                <Route exact path='/issues' component={IssueList} />\n                <Route exact path='/issues/:id' component={IssueEdit} />\n                <Route component={NoMatch}/>\n            </Switch>\n            <div className='footer'>\n                Created by YZ test link <a href='www.google.com'>click it</a>\n            </div>\n        </div>\n    </Router>\n  );\n  \nReactDOM.render(<RoutedApp />, contentNode);\n\nif (module.hot) {\n    console.log('hottt');\n    module.hot.accept(()=>{\n        console.log('It\\'s soooo HOOOOOT!!!');\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'whatwg-fetch';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport qs from 'qs';\n\nimport IssueAdd from './IssueAdd.jsx';\nimport IssueFilter from './IssueFilter.jsx';\n\n\nexport default class IssueList extends React.Component {\n    constructor(){\n        super();\n        this.state = {issues : [], };\n        this.createIssue = this.createIssue.bind(this);\n        this.setFilter = this.setFilter.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadData();  \n    }\n\n    componentDidUpdate(prevProps){\n        const oldQuery = qs.parse(prevProps.location.search.substring(1));\n        const newQuery = qs.parse(this.props.location.search.substring(1));\n        if(oldQuery.status === newQuery.status) return;\n        this.loadData(); \n        \n    }\n\n    loadData(){\n        fetch(`/api/issues${this.props.location.search}`).then(response =>{\n            if(response.ok){\n                response.json().then(data =>{\n                    console.log(\"Total count of records:\" + data._metadata.total_count);\n                    data.records.forEach(issue => {\n                        issue.created = new Date(issue.created);\n                        if(issue.completionDate)\n                            issue.completionDate = new Date(issue.created);\n                       \n                    });\n                    this.setState({issues: data.records});\n                });\n            }else {\n                response.json().then(error =>{\n                    alert(\"Failed to fetch issues:\" + error.message);\n                });\n            }\n        }).catch(err =>{\n            alert(\"Error in fetching data from server:\", err);\n        });\n    }\n\n    createIssue(newIssue){\n        fetch('/api/issues', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newIssue), //pass 'newIssue' (created from the form) to req.body in json format to SERVER side. \n            //Here is client side.\n        }).then(response => \n        {\n            if(response.ok){\n                response.json().then(\n                    updatedIssue => {\n                        updatedIssue.created = new Date(updatedIssue.created); //JSON date format is not regular date, so we need to convert it.\n                        if(updatedIssue.completionDate)\n                            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n                        const newIssues = this.state.issues.concat(updatedIssue); //javascript: array.concat: combine two arrays together, doesnt modify original array, returns a new combined array.\n                        this.setState({issues : newIssues});\n                    }\n                );\n            }else{\n                response.json().then(err => {\n                    alert(\"Failed to add issue: \" + err.message)\n                });\n            }\n        });\n    }\n\n    setFilter(query){\n        this.props.history.push({pathname: this.props.location.pathname, search: qs.stringify(query)});\n    }\n\n    render(){\n        return (\n            <div>\n                <IssueFilter setFilter = {this.setFilter} />\n                <hr />\n                <IssueTable issues={this.state.issues} />\n                <hr />\n                <IssueAdd createIssue={this.createIssue} />\n            </div>\n        );\n    }\n}\n\n\nIssueList.propTypes = {\n    location: PropTypes.object.isRequired,\n    router: PropTypes.object,\n};\n\nfunction IssueTable(props){\n    const issueRows  = props.issues.map(issue =><IssueRow key = { issue._id } issue = {issue} />);\n    return (\n        <table className=\"bordered-table\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Status</th>\n                    <th>Owner</th>\n                    <th>Created</th>\n                    <th>Effort</th>\n                    <th>Completion Date</th>\n                    <th>Title</th>\n                </tr>\n            </thead>\n            <tbody>\n                {issueRows}\n            </tbody>\n        </table>\n    );\n}\n\nfunction IssueRow(props){\n    return (\n        <tr>\n        <td><Link to={`/issues/${props.issue._id}`}>{props.issue._id}</Link></td>\n        <td>{props.issue.status}</td>\n        <td>{props.issue.owner}</td>\n        <td>{props.issue.created.toDateString()}</td>\n        <td>{props.issue.effort}</td>\n        <td>{props.issue.completionDate? props.issue.completionDate.toDateString() : ''}</td>\n        <td>{props.issue.title}</td>\n    </tr>\n    )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react';\n\nexport default class IssueAdd extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // when add button is clicked, form onSubmit event is called.\n    handleSubmit(e) {\n        e.preventDefault();\n        const form = document.forms.issueAdd;\n        // parent: createIssue method in parent is called with the entered info from the form.\n        this.props.createIssue({\n            owner: form.owner.value,\n            title: form.title.value,\n            created: new Date(),\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form name='issueAdd' onSubmit={this.handleSubmit}>\n                    <input type='text' name ='owner' placeholder = 'Owner' />\n                    <input type = 'text' name = 'title' placeholder = 'Title' />\n                    <button>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class IssueFilter extends React.Component {\n    constructor(){\n        super();\n        this.clearFilter = this.clearFilter.bind(this);\n        this.setFilterOpen = this.setFilterOpen.bind(this);\n        this.setFilterAssigned = this.setFilterAssigned.bind(this);\n    }\n\n    setFilterOpen(e){\n        e.preventDefault();\n        this.props.setFilter({status: 'Open'});\n    }\n\n    setFilterAssigned(e){\n        e.preventDefault();\n        this.props.setFilter({status: 'Assigned'});\n    }\n\n    clearFilter(e){\n        e.preventDefault();\n        this.props.setFilter({});\n    }\n    \n    render() {\n        const Separator = () => <span> | </span>;\n        return (\n            <div>\n                <a href=\"#\" onClick={this.clearFilter}>All Issues</a>\n                <Separator />\n                <a href=\"#\" onClick={this.setFilterOpen}>Open Issues</a>\n                <Separator />\n                <a href=\"#\" onClick={this.setFilterAssigned}>Assigned Issues</a>\n            </div>\n        );\n    }\n}\n\n/*\n<div>\n                <Link to=\"/issues\">All Issues</Link>\n                <Separator />\n                <Link to=\"/issues?status=Open\">Open Issues</Link>\n                <Separator />\n                <Link to=\"/issues?status=Assigned\">Assigned Issues</Link>\n            </div>\n            */\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default class IssueEdit extends React.Component {\n    render() {\n        const id = this.props.match.params.id;\n        return (\n            <div>\n                <p>\n                    This is a placeholder for editing issue: {this.props.match.params.id}\n                </p>              \n                <Link to=\"/issues\">Back to issue list</Link>\n            </div>\n        );\n    }\n}\n\n\nIssueEdit.propTypes = {\n    params : PropTypes.object,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueEdit.jsx"],"sourceRoot":""}